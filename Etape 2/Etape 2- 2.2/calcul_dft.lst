


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000         
    3 00000000                 extern           TabSig
    4 00000000         
    5 00000000                 area             moncode, code, readonly
    6 00000000                 export           calcul_preliminaire
    7 00000000         ;
    8 00000000         
    9 00000000         ; pour cette fonction, on va utiliser les registres comp
                       ris entre R4 et R11 
   10 00000000         ; En effet, ces registres vont être utilisés comme stock
                       age temporaire à condition de les push et pop avant le r
                       etour 
   11 00000000         
   12 00000000         calcul_preliminaire
                               proc
   13 00000000 B440            push             {r6}
   14 00000002 B480            push             {r7}
   15 00000004 F84D 8D04       push             {r8}
   16 00000008 F84D 9D04       push             {r9}
   17 0000000C F84D AD04       push             {r10}
   18 00000010 F04F 0800       mov              r8,#0       ; cela va nous perm
                                                            ettre de stocker la
                                                             variable d'incréme
                                                            ntation "i" 
   19 00000014 F04F 0A00       mov              r10,#0      ; on va utiliser ce
                                                             registre pour somm
                                                            er 
   20 00000018 F930 7018 
                       loop    ldrsh            r7, [r0,r8, LSL#1] ; on sauvega
                                                            rde x(i) 
   21 0000001C FB08 F901       mul              r9,r8,r1    ; r9 = r8 * r1 = i*
                                                            k : index d'entrée 
                                                            dans les tables tri
                                                            go
   22 00000020 F009 093F       and              r9, #0x3F   ; r9 = i*k mod N=64
                                                            
   23 00000024         
   24 00000024 F932 C019       ldrsh            r12, [r2,r9, LSL#1] ; explicati
                                                            on ci-dessous 
   25 00000028         ; soit pour la partie réelle : cos(i*k*2pi/N)= tabcos(i*
                       k mod N)
   26 00000028         ; soit pour la partie imaginaire : sin(i*k*2pi/N)=tabsin
                       (i*k mod N)
   27 00000028 FB07 AA0C       mla              r10, r7, r12, r10 ; somme((x(i)
                                                            *(tabcos(i*k mod N)
                                                             ou tabsin(i*k mod 
                                                            N))): 
   28 0000002C         
   29 0000002C F108 0801       add              r8 , #1     ; i= 1
   30 00000030 F1B8 0F40       cmp              r8, #64     ; jusqu'à i = 64 
   31 00000034 D3F0            blo              loop
   32 00000036         
   33 00000036 4650            mov              r0, r10
   34 00000038 F85D AB04       pop{r10}
   35 0000003C F85D 9B04       pop{r9}
   36 00000040 F85D 8B04       pop{r8}
   37 00000044 BC80            pop{r7}
   38 00000046 BC40            pop{r6}



ARM Macro Assembler    Page 2 


   39 00000048         
   40 00000048 4770    fin     bx               lr
   41 0000004A                 endp
   42 0000004A         ; 
   43 0000004A                 end
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\calcul_dft.d -o.\obj\calcul_dft.o -I.\RTE\_Simu -IC:\Users\h
ugol\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\hugo
l\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="
__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=ca
lcul_dft.lst calcul_dft.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

calcul_preliminaire 00000000

Symbol: calcul_preliminaire
   Definitions
      At line 12 in file calcul_dft.s
   Uses
      At line 6 in file calcul_dft.s
Comment: calcul_preliminaire used once
fin 00000048

Symbol: fin
   Definitions
      At line 40 in file calcul_dft.s
   Uses
      None
Comment: fin unused
loop 00000018

Symbol: loop
   Definitions
      At line 20 in file calcul_dft.s
   Uses
      At line 31 in file calcul_dft.s
Comment: loop used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 5 in file calcul_dft.s
   Uses
      None
Comment: moncode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TabSig 00000000

Symbol: TabSig
   Definitions
      At line 3 in file calcul_dft.s
   Uses
      None
Comment: TabSig unused
1 symbol
340 symbols in table
